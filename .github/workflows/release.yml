name: release pipeline
on:
  push:
    tags:
      - 'v*'

  workflow_dispatch:


jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4 

      - name: Generate model and metrics
        run: |
          pip install -r requirements.txt
          python src/train.py
      
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Prepare Docker image name
        id: prep
        run: echo "REPO_LOWERCASE=$(echo '${{ github.repository }}' | tr '[:upper:]' '[:lower:]')" >> $GITHUB_OUTPUT

      # STEP 2: Use the output from the step above
      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ghcr.io/${{ steps.prep.outputs.REPO_LOWERCASE }}:${{ env.TAG }}

      # STEP 3: Also use the same output here for consistency
      - name: Run container smoke test
        run: |
          docker run -d --name test-container -p 8080:8000 ghcr.io/${{ steps.prep.outputs.REPO_LOWERCASE }}:${{ env.TAG }}
          echo "Waiting for container to start..."
          sleep 10
          echo "Checking if the application is running..."
          curl -f http://localhost:8080/health || (echo "Application is not running!" && exit 1)
          echo "Smoke test passed!"
          
      - name: Read metrics file
        id: metrics
        run: echo "METRICS_JSON=$(cat metrics_v0.1.json)" >> $GITHUB_OUTPUT

      - name: Create GitHub Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ env.TAG }}
          body: |
            Official release for version ${{ env.TAG }}.
            See CHANGELOG.md for details.
            
            **Metrics (v0.1)**:
            ```json
            ${{ steps.metrics.outputs.METRICS_JSON }}
            ```
          draft: false
          prerelease: false
